{"version":3,"sources":["components/places.js","components/reviews.js","components/Home.js","components/AddPlaces.js","components/ShowPlaces.js","components/NavigationBar.js","App.js","reportWebVitals.js","index.js"],"names":["placeList","reviewList","Home","props","useState","searchResult","setSearchResult","searchKeyWord","style","textAlign","onSubmit","e","target","search","value","x","filter","place","address","includes","type","placeholder","name","map","Card","id","width","Header","as","text","Body","Title","review","placeId","AddPlaces","places","setplaces","reviews","setReviews","preventDefault","newplace","Math","random","toString","substr","push","newReview","addReview","onClick","idToDelete","filteredReviews","index","indexOf","splice","deleteReview","ShowPlaces","placeEditing","setplaceEditing","filteredplaces","count","i","length","j","deleteplace","event","idToEdit","updatedplaces","submitEdits","defaultValue","NavigationBar","Navbar","bg","expand","variant","Brand","hred","Toggle","aria-controls","Collapse","Nav","className","Link","to","App","Container","fluid","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82be9412.chunk.js","sourcesContent":["let placeList = [];\n\n\nexport default placeList;","let reviewList =[];\n\nexport default reviewList;","import 'bootstrap/dist/css/bootstrap.css';\nimport { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport placeList from \"./places\";\nimport reviewList from \"./reviews\";\n\nfunction Home(props) {\n  const [searchResult, setSearchResult] = useState([]);\n  var searchKeyWord =\"\";\n\n const search = (e) => {\n    searchKeyWord = e.target.search.value;\n    let x = placeList.filter(place => place.address.includes(searchKeyWord));\n    setSearchResult(x);\n    e.target.search.value = \"\";\n  };\n\n\n    return (\n        <div>\n\n            <h2 style={{ textAlign: \"center\" }}>Home Page</h2>\n            <form onSubmit={search}>\n                <input type=\"text\" placeholder=\"address\" name=\"search\" />\n                <input type=\"Submit\" value=\"Search\"/>\n            </form>\n            {searchResult.map(place => \n              <Card id={place.id} style={{ width: '750px' }}>\n              <Card.Header as=\"h5\">\n                {place.text}\n              </Card.Header>\n              <Card.Body>\n              Address: {place.address}\n                <Card.Title>Reviews</Card.Title>\n              {reviewList.filter(review => review.placeId === place.id).map((review) => (\n                  <div key={review.id}>\n                  <div>{review.text}</div>\n                  </div>\n                ))}\n                </Card.Body>\n              </Card>\n              )}\n           </div>\n    )\n\n}\n\nexport default Home;","import 'bootstrap/dist/css/bootstrap.css';\nimport { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport placeList from \"./places\";\nimport reviewList from \"./reviews\";\n\nfunction AddPlaces(props){\n\n    const [places, setplaces] = useState([]);\n    const [reviews, setReviews] = useState([]);\n\n    const addplace = (e) => {\n        e.preventDefault();\n        const newplace = {\n          id: Math.random().toString(36).substr(2, 9),\n          text: e.target.place.value,\n          address: e.target.address.value,\n        };\n        setplaces([...places, newplace]);\n        placeList.push(newplace);\n        e.target.place.value = \"\";\n        e.target.address.value = \"\";\n      }\n\n    function addReview(e, placeId){\n        e.preventDefault();\n        const newReview = {\n          id: Math.random().toString(36).substr(2, 9),\n          text: e.target.review.value,\n          placeId: placeId,\n        };\n        setReviews([...reviews, newReview]);\n        reviewList.push(newReview);\n        e.target.review.value = \"\";\n      }\n\n    function deleteReview(idToDelete){\n        const filteredReviews = reviews.filter((review) => review.id !== idToDelete);\n        setReviews(filteredReviews);\n        let index = reviewList.indexOf(filteredReviews[0].id);\n        reviewList.splice(index, 1);\n    };\n      return (\n          <div>\n            <form onSubmit={addplace}>\n                <input type=\"text\" placeholder=\"restaurant\" name=\"place\" />\n                <input type=\"text\" placeholder=\"address\" name=\"address\" />\n                <input type=\"Submit\" value=\"Add Restaurant\"/>\n            </form>\n\n        {places.map((place) => (\n            <div key={place.id}>\n        <Card id={place.id} style={{ width: '750px' }}>\n        <Card.Header as=\"h5\">{place.text}\n        </Card.Header>\n\n        <Card.Body>\n        Address: {place.address}\n        <Card.Title>Reviews</Card.Title>\n        \n        <form onSubmit={(e) => addReview(e, place.id)}>\n                <input type=\"text\" name=\"review\" />\n                <input type=\"Submit\" />\n        </form>\n        {reviews.filter(review => review.placeId === place.id).map((review) => (\n            \n        <div key={review.id}>\n      <div>{review.text}</div>\n        <button onClick={() => deleteReview(review.id)}>delete</button>\n        </div>\n    ))}\n        </Card.Body>\n        </Card>\n  </div>\n))}\n        </div>\n\n\n      )\n}\n\nexport default AddPlaces;","import 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport placeList from \"./places\";\nimport reviewList from \"./reviews\";\nimport { useState } from 'react';\n\nfunction ShowPlaces(props){\n    const [reviews, setReviews] = useState([]);\n    const [places, setplaces] = useState([]);\n    const [placeEditing, setplaceEditing] = useState(\"\");\n\n    function addReview(e, placeId){\n        e.preventDefault();\n        const newReview = {\n          id: Math.random().toString(36).substr(2, 9),\n          text: e.target.review.value,\n          placeId: placeId,\n        };\n        setReviews([...reviews, newReview]);\n        reviewList.push(newReview);\n        e.target.review.value = \"\";\n      }\n      const deleteplace = (idToDelete) => {\n        const filteredplaces = placeList.filter((place) => place.id !== idToDelete);\n        setplaces(filteredplaces);\n        let count = 0;\n        for (let i = 0; i < filteredplaces.length;i++){\n            placeList[count] = filteredplaces[i];\n            count++;\n        }\n        for (let j = count; count < placeList.length;j++){\n            placeList.splice(j, 1);\n        }\n    };\n\n    function deleteReview(idToDelete){\n        const filteredReviews = reviewList.filter((review) => review.id !== idToDelete);\n        setReviews(filteredReviews);\n        let count = 0;\n        for (let i = 0; i < filteredReviews.length;i++){\n            reviewList[count] = filteredReviews[i];\n            count++;\n        }\n        for (let j = count; count < reviewList.length;j++){\n            reviewList.splice(j, 1);\n        }\n    };\n    const submitEdits = (event, idToEdit) => {\n        event.preventDefault();\n        const updatedplaces = placeList.map((place) => {\n          if (place.id === idToEdit) {\n            return {\n              id: place.id,\n              text: event.target.place.value,\n              address: event.target.address.value,\n            };\n          } else {\n            return place;\n          }\n        });\n        for (let i = 0; i < updatedplaces.length;i++){\n            placeList[i] = updatedplaces[i];\n        }\n        setplaces(updatedplaces);\n        setplaceEditing(\"\");\n      };\n      return (\n        <div>\n\n    {placeList.map((place) => (\n        <div key={place.id}>\n          {place.id !== placeEditing ? (\n    <Card id={place.id} style={{ width: '750px' }}>\n    <Card.Header as=\"h5\">{place.text} \n    <button onClick={() => deleteplace(place.id)}>delete</button>\n    <button onClick={() => setplaceEditing(place.id)}>edit</button>\n    </Card.Header>\n\n    <Card.Body>\n    Address: {place.address}\n    <Card.Title>Reviews</Card.Title>\n    <form onSubmit={(e) => addReview(e, place.id)}>\n                <input type=\"text\" name=\"review\" />\n                <input type=\"Submit\" />\n        </form>\n    {reviewList.filter(review => review.placeId === place.id).map((review) => (\n        \n    <div key={review.id}>\n  <div>{review.text}</div>\n    <button onClick={() => deleteReview(review.id)}>delete</button>\n    </div>\n))}\n    </Card.Body>\n    </Card>\n  ) : (\n  <form onSubmit={(e) => submitEdits(e, place.id)}>\n    Restaurant Name:\n    <input type=\"text\" name=\"place\" defaultValue={place.text}></input>\n    <br></br>\n    Address:\n    <input type=\"text\" name=\"address\" defaultValue={place.address}></input>\n    <br></br>\n    <button type=\"Submit\"> Submit Edits</button>\n  </form>\n)}\n\n</div>\n))}\n    </div>\n\n\n  )\n}\nexport default ShowPlaces;","import {Link} from \"react-router-dom\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from 'react-bootstrap/Navbar'\n\nfunction NavigationBar(props){\n    return (\n        <Navbar bg= \"dark\" expand=\"lg\" variant=\"dark\">\n            <Navbar.Brand hred=\"#Home\">My Near By Places</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            \n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link><Link className=\"link\" to=\"/\">Home</Link></Nav.Link>\n                    <Nav.Link><Link className=\"link\" to=\"/addPlaces\">Add the Place</Link></Nav.Link>\n                    <Nav.Link><Link className=\"link\" to=\"/showPlaces\">Display Places</Link></Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    );\n\n}\nexport default NavigationBar;","//import logo from './logo.svg';\nimport './App.css';\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\nimport Container from 'react-bootstrap/Container';\nimport Home from './components/Home';\nimport AddPlaces from './components/AddPlaces';\nimport ShowPlaces from './components/ShowPlaces';\nimport NavigationBar from \"./components/NavigationBar.js\";\n\n\nfunction App() {\n  \n\n  return (\n    <HashRouter>\n        <Container fluid>\n            <NavigationBar />\n            <Switch>\n                <Route exact path=\"/\">\n                    <Home/>\n                </Route>\n                <Route exact path=\"/addPlaces\">\n                    <AddPlaces/>\n                </Route>\n                <Route exact path=\"/showPlaces\">\n                    <ShowPlaces/>\n                </Route>\n            </Switch>\n        </Container>\n    </HashRouter>\n);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}